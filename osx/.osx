#!/usr/bin/env bash

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

###############################################################################

##printf "What's the computer name? "
##read -r computer_name

# Set computer name (as done via System Preferences → Sharing)
##sudo scutil --set ComputerName "$computer_name"
##sudo scutil --set HostName "$computer_name"
##sudo scutil --set LocalHostName "$computer_name"
##sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$computer_name"

fancy_echo "Creating local directories...."
if test ! -d $HOME/bin; then
  mkdir $HOME/bin
fi

if test ! -d $HOME/tmp; then
  mkdir $HOME/tmp
fi

if test ! -d $HOME/.local; then
  mkdir $HOME/.local
fi

if test ! -d $HOME/.config; then
  mkdir $HOME/.config
fi

if test ! -d $HOME/.ssh; then
  mkdir $HOME/.ssh
fi
chmod 0700 $HOME/.ssh

if test ! -d $HOME/src; then
  mkdir $HOME/src
else
  if test ! -d $HOME/src/work; then
    mkdir $HOME/src/work
  fi
  if test ! -d $HOME/src/personal; then
    mkdir $HOME/src/personal
  fi
fi

##  This doesn't work too well this way, so do this by hand.
##fancy_echo "Installing oh-my-zsh...."
##if test ! -d $HOME/.oh-my-zsh; then
##  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
##  fancy_echo "Cleaning up oh-my-zshrc modified $HOME/.zshrc...."
##  mv $HOME/.zshrc $HOME/.zshrc.$(/bin/date '+%Y%m%d')
##fi

fancy_echo "Setting up dotfiles...."
cd $HOME/src/personal/dotfiles
if test ! -f $HOME/.bash_profile; then
  ln -s $(pwd)/bash/.bash_profile $HOME
fi
if test ! -f $HOME/.bashrc; then
  ln -s $(pwd)/bash/.bashrc $HOME
fi
if test ! -f $HOME/.bourne-common.profile; then
  ln -s $(pwd)/bourne-common/.bourne-common.profile $HOME
fi
if test ! -f $HOME/.bourne-common.rc; then
  ln -s $(pwd)/bourne-common/.bourne-common.rc $HOME
fi
if test ! -f $HOME/.emacs; then
  ln -s $(pwd)/emacs/.emacs $HOME
fi
if test ! -f $HOME/.gitconfig; then
  ln -s $(pwd)/git/.gitconfig $HOME
fi
if test ! -f $HOME/.kshrc; then
  ln -s $(pwd)/ksh/.kshrc $HOME
fi
if test ! -f $HOME/.profile; then
  ln -s $(pwd)/ksh/.profile $HOME
fi
if test ! -f $HOME/.screenrc; then
  ln -s $(pwd)/screen/.screenrc $HOME
fi
if test ! -f $HOME/.ssh/config; then
  ln -s $(pwd)/ssh/config $HOME/.ssh/config
fi
if test ! -f $HOME/.config/starship.toml; then
  ln -s $(pwd)/starship/starship.toml $HOME/.config/
fi
if test ! -f $HOME/.tmux.conf; then
  ln -s $(pwd)/tmux/.tmux.conf $HOME
fi
if test ! -f $HOME/.exrc; then
  ln -s $(pwd)/vi/.exrc $HOME
fi
if test ! -f $HOME/.vimrc; then
  ln -s $(pwd)/vim/.vimrc $HOME
fi
if test ! -f $HOME/.wezterm.lua; then
  ln -s $(pwd)/wezterm/.wezterm.lua $HOME
fi
if test ! -f $HOME/.zshenv; then
  ln -s $(pwd)/zsh/.zshenv $HOME
fi
if test ! -f $HOME/.zshrc; then
  ln -s $(pwd)/zsh/.zshrc $HOME
fi

if ! command -v "brew" > /dev/null; then
  fancy_echo "Installing homebrew...."
  /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

brew install --cask arc
brew install --cask emacs
brew install --cask rstudio
brew install --cask wezterm

brew install binutils
brew install coreutils
brew install diffutils
brew install findutils
brew install ksh
brew install r
brew install screen
brew install tmux
brew install vim
brew install watch
brew install wget
brew install vim
brew install zsh

brew install aspell
brew install awscli
brew install git
brew install glow
brew install jq
brew install less
brew install lmod
brew install openssl
brew install pipx
brew install starship
brew install yq

brew tap homebrew/cask-fonts
brew install font-b612
brew install font-inconsolata-nerd-font

fancy_echo "Setting up OS X defaults....."
# dark mode
defaults write NSGlobalDomain AppleInterfaceStyle Dark

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Set the icon size of Dock items to 16 pixels
defaults write com.apple.dock tilesize -int 16

# Set the magnification to true
defaults write com.apple.dock magnification -int 1

# Wipe all (default) app icons from the Dock
defaults write com.apple.dock persistent-apps -array

# Show only open applications in the dock
defaults write com.apple.dock static-only -bool true

# remove autohide delay
defaults write com.apple.dock autohide-delay -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# show batter percentage
defaults write com.apple.menuextra.battery ShowPercent -bool true

# show the date in the toolbar
defaults write com.apple.menuextra.clock DateFormat -string 'EEE MMM d  H:mm'

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# Disable sound effects when changing volume
defaults write NSGlobalDomain com.apple.sound.beep.feedback -integer 0

# Disable sounds effects for user interface changes
defaults write NSGlobalDomain com.apple.sound.uiaudio.enabled -int 0

# Set alert volume to 0
defaults write NSGlobalDomain com.apple.sound.beep.volume -float 0.0

# Show volume in the menu bar
defaults write com.apple.systemuiserver "NSStatusItem Visible com.apple.menuextra.volume" -int 0

# Show Bluetooth in the menu bar
defaults write com.apple.systemuiserver "NSStatusItem Visible com.apple.menuextra.bluetooth" -int 0

# don't hide files
defaults write com.apple.finder AppleShowAllFiles TRUE

# Show the $HOME/Library folder
chflags nohidden $HOME/Library

# Show the /Volumes folder
sudo chflags nohidden /Volumes

# speed up window opening by disabling animation
defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool NO

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Disable automatic capitalization as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable automatic period substitution as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

# Set Desktop as the default location for new Finder windows
# For other paths, use `PfLo` and `file:///full/path/here/`
defaults write com.apple.finder NewWindowTarget -string "PfDe"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop/"

# Finder: show hidden files by default
#defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Use list view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# reboot systemUIServer to enable defaults to take effect
killall SystemUIServer
