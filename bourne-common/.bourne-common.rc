# vim: filetype=sh
# things common to bourne shells (interactive only)

##echo "Entering .bourne-common.rc...."
##echo "MANPATH is ${MANPATH}"
##echo "PATH is ${PATH}"

LS='ls'
if [ "$(uname)" = 'Linux' ] ; then
  LS='ls --color=auto'
elif [ "$(uname)" = 'OpenBSD' ] && command -v colorls > /dev/null ; then
  LS='colorls'
fi
alias ls="$LS -FHh"
alias ll='ls -l'
alias la='ls -lA'
alias ..='cd ..'
alias ...='cd ...'
alias mkdir='mkdir -p'
alias df='df -h'
alias du='du -ch'
alias weather='curl http://wttr.in/New_York'
command -v neomutt > /dev/null && alias mutt='neomutt'
[ "$(uname)" != 'OpenBSD' ] && alias grep='grep --color=auto'

case "$(uname)" in
  OpenBSD) SUDO='doas' ;;
  *)       SUDO='sudo -E' ;;
esac
alias svim="$SUDO vim"
alias svi="$SUDO vi"

# colored man pages
man() {
  LESS_TERMCAP_md=$'\e[01;31m' \
  LESS_TERMCAP_me=$'\e[0m' \
  LESS_TERMCAP_se=$'\e[0m' \
  LESS_TERMCAP_so=$'\e[01;47;30m' \
  LESS_TERMCAP_ue=$'\e[0m' \
  LESS_TERMCAP_us=$'\e[01;32m' \
  command man "$@"
}

ssh-key-add() {
  ssh-keyscan -t rsa,ed25519,ecdsa $1 2>&1 | egrep -v '^#' | sort -u - ~/.ssh/known_hosts > $HOME/tmp/known_hosts.tmp
  mv $HOME/tmp/known_hosts.tmp $HOME/.ssh/known_hosts
}

if command -v dircolors > /dev/null && [ -f $HOME/.dircolors ] ; then
  eval "$(dircolors "$HOME/.dircolors")"
fi

# Start ssh-agent to keep you logged in with keys, use `ssh-add` to log in
agent=`pgrep ssh-agent -u $USER` # get only your agents
if [[ "$agent" == "" || ! -e ~/.ssh/.agent_env ]]; then
    # if no agents or environment file is missing create a new one
    # remove old agents / environment variable files
    kill $agent running
    rm ~/.ssh/.agent_env

    # restart
    eval `ssh-agent`
    echo 'export SSH_AUTH_SOCK'=$SSH_AUTH_SOCK >> ~/.ssh/.agent_env
    echo 'export SSH_AGENT_PID'=$SSH_AGENT_PID >> ~/.ssh/.agent_env
fi

# create our own hardlink to the socket (with random name)
source ~/.ssh/.agent_env
MYSOCK=/tmp/ssh_agent.${RANDOM}.sock
if test -f /opt/homebrew/Cellar/coreutils/9.4/libexec/gnubin/ln; then
  /opt/homebrew/Cellar/coreutils/9.4/libexec/gnubin/ln -T $SSH_AUTH_SOCK $MYSOCK
else
  ln -T $SSH_AUTH_SOCK $MYSOCK
fi
export SSH_AUTH_SOCK=$MYSOCK

end_agent()
{
    ## if we are the last holder of a hardlink, then kill the agent
    nhard=`ls -l $SSH_AUTH_SOCK | awk '{print $2}'`
    if [[ "$nhard" -eq 2 ]]; then
        rm ~/.ssh/.agent_env
        ssh-agent -k
    fi
    rm $SSH_AUTH_SOCK
}
trap end_agent EXIT
##set +x

export NVM_HOME=$HOME/.nvm
if test -s /opt/homebrew/opt/nvm/nvm.sh; then
  . /opt/homebrew/opt/nvm/nvm.sh
fi

##echo "Exiting .bourne-common.rc...."
##echo "PATH is ${PATH}"
##echo "MANPATH is ${MANPATH}"
